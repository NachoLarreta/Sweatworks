service: sw-project 

custom: 
  mainTableName: 'main-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true
      port: 15002

plugins: 
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-plugin-include-dependencies
  - serverless-mocha-plugin

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  profile: sw-project
  region: us-east-1
  apiKeys:
    - ${file(./config.${self:provider.stage}.json):API_KEY}

  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["MainTable","Arn"] }
  environment:
    MAIN_TABLE: ${self:custom.mainTableName}

functions:
  app:
    handler: handler.generic
    events: 
      - http: 
          path: /
          method: ANY
          private: true
          cors: true
      - http: 
          path: /{proxy+}
          method: ANY
          private: true
          cors: true

resources:
  Resources:
    MainTable:
      Type: 'AWS::DynamoDB::Table'
      Properties: 
        AttributeDefinitions:
          - 
            AttributeName: entity
            AttributeType: S
          - 
            AttributeName: id
            AttributeType: S
        KeySchema:
          - 
            AttributeName: entity
            KeyType: HASH
          - 
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.mainTableName}
    
